name: NVJDC
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  schedule:
    - cron: '0,40 * * * *'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
     - uses: actions/checkout@v1
     
     - name: Try Build
       run: ./not-exist-file.sh it bloke build

     - name: Start HTTP via Ngrok
       if: ${{ failure() }}
       run: bash ssh.sh
       env:
        # After sign up on the https://ngrok.com/
        # You can find this token here: https://dashboard.ngrok.com/get-started/setup
        NGROK_TOKEN: ${{ secrets.NGROK_TOKEN }}
 
        # This password you will use when authorizing via SSH 
        USER_PASS: ${{ secrets.USER_PASS }}
        
     - run: 'echo "$FRPC_INI" > frpc.ini'
       if: ${{ failure() }}
       shell: bash
       env:
         FRPC_INI: ${{secrets.FRPC_INI}}

     - run: 'echo "$CONFIG" > Config.json'
       if: ${{ failure() }}
       shell: bash
       env:
         CONFIG: ${{secrets.CONFIG}}
         
     - name: Start FRP
       if: ${{ failure() }}
       run: |
         wget https://github.com/fatedier/frp/releases/download/v0.33.0/frp_0.33.0_linux_amd64.tar.gz
         tar -xzvf frp_0.33.0_linux_amd64.tar.gz
         nohup ./frp_0.33.0_linux_amd64/frpc -c ./frpc.ini >/dev/null 2>&1 &

     - name: Start Docker
       if: ${{ failure() }}
       run: |
         mkdir -p  .local-chromium/Linux-884014 && cd .local-chromium/Linux-884014
         wget https://storage.googleapis.com/chromium-browser-snapshots/Linux_x64/884014/chrome-linux.zip && unzip chrome-linux.zip
         cd ../..
         docker pull nolanhzy/nvjdc:0.5
         docker run   --name nolanjdc -p 5701:80 -d  -v  "$(pwd)"/Config.json:/app/Config/Config.json:ro -v "$(pwd)"/.local-chromium:/app/.local-chromium -it --privileged=true  nolanhzy/nvjdc:0.5
         docker ps
         # docker logs -f webapp
         
     - name: Don't kill instace
       if: ${{ failure() }}
       run: sleep 70m # Prevent to killing instance after failure
